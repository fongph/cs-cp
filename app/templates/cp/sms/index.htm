<style>
    .text-danger a {
        color: #a94442 !important;
    }
</style>
<div>
    <h1 class="text-center">{$title}</h1>

    {if $di.deviceModules->getModuleErrorCode('sms') == 109 && $hasRecords}
    {include "content/{$di.t->getLocale()}/warning/noDataServer.html"}
    {/if}

    {insert "inc.cp.messages.htm"}

    {if $hasRecords}
    <div class="daterangepickerWrapper">
        <div id="reportrange" class="btn btn-default pull-right">
            <i class="fa fa-calendar fa-lg"></i>
            <span></span>
            <b class="caret"></b>
        </div>
    </div>

    <div class="table-container dialogs-table">
        <table class="dataTable" id="datatable" aria-describedby="datatables_info">
            <thead>
            <tr role="row">
                <th>{$di.t->_('Date')}</th>
                <th>{$di.t->_('Type')}</th>
                <th>{$di.t->_('Number')}</th>
                <th>{$di.t->_('Name')}</th>
                <th>{$di.t->_('Message')}</th>
            </tr>
            </thead>
        </table>
    </div>
    <script type="text/javascript">
        $(document).ready(function() {
            moment.lang('{$di.t->getLocale()}');

            var sms = {
                table: null,
                typeTmpl: _.template('<i class="sms-<%= type %> hidden-xs" title="<%- title %>"></i><span class="visible-xs"><%- title %></span>'),
                getRangeUrl: function(start, end) {
                    if (start && end && start.isValid() && start.isValid()) {
                        start = moment(start).unix();
                        end = moment(end).unix();
                    } else {
                        start = end = -1;
                    }

                    return '{$di.router->getRouteUrl("sms")}?' + $.param({
                                timeFrom: start,
                                timeTo: end
                            });
                },
                reloadTable: function(url) {
                    this.table.fnReloadAjax(url);
                },
                init: function() {
                    var table = $('#datatable').dataTable({
                                bProcessing: true,
                                bServerSide: true,
                                sAjaxSource: this.getRangeUrl(),
                                bPaginate: true,
                                bFilter: true,
                                bSort: true,
                                bInfo: true,
                                bAutoWidth: false,
                                bSortMulti: false,
                                iDisplayLength: {$authData.records_per_page},
                            aaSorting: [[0, 'desc']],
                            oLanguage: {
                        sUrl: '{$di.config.staticDomain}/datatables/language/{$di.t->getLocale()}.txt'
                    },
                    aoColumns: [
                        {
                            bUseRendered: false,
                            sWidth: '180px',
                            mData: 'timestamp',
                            mRender: function(value, type, data) {
                                return moment(value * 1000){if isset($customUtcOffset)}.zone({$customUtcOffset}){/if}.format('lll');
                                }
                                },
                                {
                                    bUseRendered: false,
                                            sWidth: '80px',
                                        mData: 'type',
                                        mRender: function(value) {
                                    if (value === 'in') {
                                        return sms.typeTmpl({
                                            type: 'in',
                                            title: "{$di.t->_('Incoming message')}"
                                        });
                                    } else if (value === 'out') {
                                        return sms.typeTmpl({
                                            type: 'out',
                                            title: "{$di.t->_('Outgoing message')}"
                                        });
                                    } else {
                                        return '*';
                                    }
                                }
                                },
                                {
                                    mData: 'number',
                                            mRender: function(value) {
                                    return _.escape(value);
                                }
                                },
                                {
                                    mData: 'name',
                                            mRender: function(value, type, data) {
                                    if (data.group.length) {
                                        return '<b>{$di['t']->_('Group')}</b>';
                                    }

                                    return _.escape(value);
                                }
                                },
                                {
                                    mData: 'content',
                                            bSortable: false,
                                        mRender: function(value, type, data) {
                                    var content = '';
                                    if (_.isString(value)) {
                                        if (value.length > 200) {
                                            content = value.substr(0, 200) + '...';
                                        } else {
                                            content = value;
                                        }
                                        var content = _.escape(content);
                                    }



                                    if (data.multimedia != 'none') {
                                        if (data.multimedia == 'text') {
                                            return content;
                                        } else if (data.multimedia == 'location') {
                                            return '<div class="attachment ' + data.multimedia + '"><div>';
                                        } else {
                                            return '<div class="attachment ' + data.multimedia + '">' + content + '<div>';
                                        }
                                    } else {
                                        return content;
                                    }
                                }
                                }
                                ],
                                fnRowCallback: function(nRow, data) {
                                    $(nRow).on('click', function() {
                                        if (data.group.length) {
                                            window.location = '{$di.router->getRouteUrl("sms")}/group/' + encodeURIComponent(data.group) + '#' + encodeURIComponent(data.timestamp);
                                        } else {
                                            window.location = '{$di.router->getRouteUrl("sms")}/' + encodeURIComponent(data.number) + '#' + encodeURIComponent(data.timestamp);
                                        }
                                    });
                                },
                                fnDrawCallback: function() {
                                    sms.table = table;
                                    $(this).find('tbody').tableScroll();
                                }
                            });

                    this.initRangePicker();
                },
                initRangePicker: function() {
                    $('#reportrange').timeRange(function(from, to) {
                        sms.reloadTable(sms.getRangeUrl(from, to));
                    });
                }
            };

            sms.init();
        });
    </script>
    {else}
    {include "content/{$di.t->getLocale()}/noDataTitle.html"
    moduleName = $di.t->_('SMS')
    }

    {if $di.currentDevice.os=='icloud'}
    {include "content/{$di.t->getLocale()}/noDataICloud.html"
    moduleId = 'sms'
    moduleName = $di.t->_('SMS')
    }
    {else}
    {include "content/{$di.t->getLocale()}/noData.html"}
    {/if}
    {/if}
</div>