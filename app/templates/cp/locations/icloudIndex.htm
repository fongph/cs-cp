<style>
    #slider-holder {
        padding: 15px;
    }
    
    .map-holder {
        margin-top: 10px;
    }

    #loading {
        text-align: center;
    }
    
    #loading .progress {
        width: 200px;
        margin: 0 auto;
    }

    #no-data {
        text-align: center;
    }
    
    #data-holder, #no-data, #loading {
        display: none;
    }

    #geo-fences-holder {
        text-align: center;
        padding-top: 10px;
    }

    #button-holder {
        text-align: center;
        margin: 10px 0;
    }
    
    .scrollFix {
        line-height: 1.35;
        overflow: hidden;
        white-space: nowrap;
    }
    
    a[data-zone] {
        font-weight: 700;
    }
    
    @media (min-width: 767px) {
        #allDataBlock {
            text-align: right;
        }

        #geo-fences-holder {
            text-align: right;
            padding: 0;
        }
    }
</style>
<div>
    <h1 class="text-center">{$title}</h1>

    <div class="container-max">
        {insert "inc.flashMessages.htm"}
        
        <div id="data-holder">
            <div id="map">
                <div class="map-holder">
                    <div id="map-canvas" style="display: block; width: 100%; height: 400px;"></div>
                </div>
            </div>
        </div>
        
        <div id="no-data">
            {$di.t->_('Unable to track device location!')}
        </div>

        <div id="loading">
            <div class="progress progress-striped active">
                <div class="progress-bar" style="width: 100%"></div>
            </div>
        </div>
        
        <div id="button-holder">
            <button class="btn btn-primary" id="track">{$di.t->_('Track Location')}</button>
        </div>
        
        <script type="text/javascript">
            $(document).ready(function () {
                locations = {
                    map: null,
                    marker: null,
                    polyline: 1,
                    data: [],
                    path: [],
                    infoWindow: null,
                    updateMapBounds: function(){
                        google.maps.event.trigger(this.getMap(), "resize");
                        this.getMap().setCenter(this.marker.getPosition());
                        this.getMap().setZoom(13);
                    },
                    showInfoWindow: function (content, position) {
                        if (this.infoWindow === null) {
                            this.infoWindow = new google.maps.InfoWindow();
                        }
                        
                        this.infoWindow.close();
                        this.infoWindow.setContent('<div class="scrollFix">' + content + '</div>');
                        this.infoWindow.setPosition(position);
                        this.infoWindow.open(this.getMap());
                    },
                    getMap: function () {
                        if (this.map === null) {
                            this.map = new google.maps.Map(document.getElementById("map-canvas"), {
                                mapTypeId: google.maps.MapTypeId.ROADMAP,
                                center: new google.maps.LatLng(0, 0),
                                zoom: 0
                            });
                        } 
                        
                        return this.map;
                    },
                    clearData: function () {
                        if (this.marker === null) {
                            return;
                        }
                        
                        this.marker.setMap(null);
                    },
                    updateData: function(data) {
                        var self = this;
                        
                        this.clearData();

                        var latLng = new google.maps.LatLng(parseFloat(data.latitude), parseFloat(data.longitude));

                        this.marker = new google.maps.Marker({
                            position: latLng,
                            map: self.getMap(),
                            icon: '{$di.config.staticDomain}/img/marker-curr.png',
                            animation: google.maps.Animation.BOUNCE
                        });

                        google.maps.event.addListener(this.marker, 'click', function() {
                            var content = '<b>' + moment.unix(data.timestamp).format("lll") + '</b>';
                            if (data.address) {
                                content = content + ' - ' + data.address;
                            }

                            self.showInfoWindow(content, self.marker.getPosition());
                        });

                        $('#datatable .view-on-map').click((function(marker) {
                            return function() {
                                $('.nav-pills a[href=#map]').tab('show');
                                google.maps.event.trigger(marker, 'click');
                            };
                        })(this.marker));
                    },
                    loadData: function () {
                        var self = this;
                        
                        return $.getJSON("{$di.router->getRouteUrl('locations')}", function (data) {
                            if (data.success) {
                                var latLng = new google.maps.LatLng(parseFloat(data.latitude), parseFloat(data.longitude));
                                
                                geocoder = new google.maps.Geocoder();
                                
                                geocoder.geocode({ latLng: latLng }, function(results, status) {
                                    if (status == google.maps.GeocoderStatus.OK) {
                                        if (results[1]) {
                                            data.address = results[1].formatted_address;
                                        }
                                    }
                                });
                                
                                self.updateData(data);
                                $("#data-holder").show();
                                self.updateMapBounds();
                            } else {
                                $("#no-data").show();
                                //$("#track").html("Try Again!");
                            }
                        });
                    },
                    load: function () {
                        var self = this;

                        $("#loading").show();
                        $("#data-holder").hide();
                        $("#no-data").hide();
                        $("#track").addClass('disable').attr('disabled', 'disabled');

                        var onComplete = function () {
                            $("#loading").hide();
                            $("#track").removeClass('disable').removeAttr('disabled');
                        };

                        var deferred = self.loadData();
                        deferred.complete(onComplete);
                    },
                    init: function () {
                        var self = this;
                        $("#track").click(function(){
                            self.load();
                        });
                    }
                };
            });
        </script>
        <script type="text/javascript">
            $(document).ready(function(){
                var zoneInfoWindowContent = function(data) {
                    var $content = $('<div class="zone-info"> ' +
                            '<div><a href="" class="zone-name" style="font-size: 15px; font-weight: bold;"></a></div>' +
                            '<div><b>{$di.t->_('Trigger on:')}</b> <span class="trigger-value"></span></div>' +
                            '<div><b>{$di.t->_('Alert to:')}</b> <span class="alert-value"></span></div>' +
                            '<div class="scheduling"><b>{$di.t->_('Scheduled')}</b></div>' +
                            '</div>');
                    
                    var url = '{$di.router->getRouteUrl('locationsZonesEdit', ['id' => '#'])}'.replace('#', data.id)
                    
                    $content.find('.zone-name').html(data.name).attr('href', url);
                    $content.find('.zone-edit').attr('href', url);
                    
                    var alertTo = ['{$di.t->_('Control panel')}'];
                    
                    if (data.email_alert != '0') {
                        alertTo.unshift('{$di.t->_('Email')}');
                    }
                    
                    $content.find('.alert-value').html(alertTo.join(', '));
                    
                    if (data.trigger === 'enter') {
                        $content.find('.trigger-value').html('{$di.t->_('Enter')}');
                    } else if (data.trigger === 'leave') {
                        $content.find('.trigger-value').html('{$di.t->_('Leave')}');
                    } else {
                        $content.find('.trigger-value').html('{$di.t->_('Enter')}, {$di.t->_('Leave')}');
                    }
                    
                    if (data.schedule == 0) {
                        $content.find('.scheduling').remove();
                    }
                    
                    return $content.html();
                };
            
                locations.init();
            });
        </script>
    </div>
    <script src="https://maps.googleapis.com/maps/api/js?v=3.9"></script>
</div>