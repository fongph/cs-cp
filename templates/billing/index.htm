<div>
    <h1 class="text-center">{$title}</h1>

    {insert "inc.flashMessages.htm"}

    <ul class="nav nav-pills">
        <li><a href="#all" data-toggle="tab">{$di.t->_('All')}</a></li>
        <li><a href="#active" data-toggle="tab">{$di.t->_('Active')}</a></li>
    </ul>

    <div class="table-container">
        <table class="dataTable" id="datatable" aria-describedby="datatables_info">
            <thead>
                <tr role="row">
                    <th>{$di.t->_('Plan')}</th>
                    <th>{$di.t->_('Amount')}</th>
                    <th>{$di.t->_('Currency')}</th>
                    <th>{$di.t->_('Date of purchase')}</th>
                    <th>{$di.t->_('Expired date')}</th>
                    <th>{$di.t->_('Status')}</th>
                    <th>{$di.t->_('Device name')}</th>
                    <th>{$di.t->_('Limits')}</th>
                </tr>
            </thead>
        </table>
    </div>

    <script type="text/javascript">
        $(document).ready(function () {
            moment.lang('{$di.t->getLocale()}');

            var billing = {
                url: '{$di.config.domain}/billing',
                tab: null,
                table: null,
                unlimitValue: '{$unlimitedValue}',
                limitsTmpl: _.template('Calls: <b><%= call %></b>, SMS: <b><%= sms %></b>'),
                deviceTmpl: _.template('<a class="btn btn-success btn-xs" href="{$di.router->getRouteUrl('billingAssignDevice')}?license=<%= id %>"><i class="fa fa-arrows-h"></i> {$di.t->_('Assign Device')}</a>'),
                getSourceUrl: function () {
                    if (window.location.hash === '#active') {
                        return this.url + '?active=1';
                    } else {
                        return this.url + '?active=0';
                    }
                },
                getLimitationValue: function(name, value) {
                    if ((name == 'sms' || name == 'call') && value == this.unlimitValue) {
                        return '{$di.t->_('unlimited')}';
                    }
                    
                    return value;
                },
                reloadTable: function () {
                    if (this.table) {
                        this.table.fnReloadAjax(this.getSourceUrl(window.location.hash));
                    }
                },
                setTab: function (tab) {
                    if (this.table) {
                        if (this.tab !== tab) {
                            this.reloadTable();
                        }
                    } else {
                        this.initTable();
                    }

                    this.tab = tab;
                },
                init: function () {
                    $('.nav-pills a').on('shown.bs.tab', function (e) {
                        window.location.hash = e.target.hash;
                        billing.setTab(e.target.hash);
                        window.scrollTo(0, 0);
                    });

                    var url = document.location.toString();
                    if (url.match('#')) {
                        $('.nav-pills a[href=#' + url.split('#')[1] + ']').tab('show');
                    } else {
                        $('.nav-pills a[href=#all]').tab('show');
                    }
                },
                initTable: function () {
                    table = $('#datatable').dataTable({
                        bProcessing: true,
                        bServerSide: true,
                        sAjaxSource: this.getSourceUrl(),
                        bPaginate: true,
                        bSort: false,
                        bFilter: false,
                        bAutoWidth: false,
                        iDisplayLength: {$authData.records_per_page},
                        oLanguage: {
                            sUrl: "{$di.config.staticDomain}/js/datatables/language/{$di.t->getLocale()}.txt"
                        },
                        aoColumns: [
                            {
                                mData: 'name'
                            },
                            {
                                mData: 'amount'
                            },
                            {
                                mData: 'currency'
                            },
                            {
                                mData: 'activation_date'
                            },
                            {
                                mData: 'expiration_date'
                            },
                            {
                                mData: 'status'
                            },
                            {
                                mData: 'device',
                                mRender: function() {
                                    var data = arguments[2];
                                    if (data.device == null) {
                                        if (data.status == 'available') {
                                            return billing.deviceTmpl({
                                                id: data.id
                                            });
                                        } else {
                                            return '-';
                                        }
                                    }
                                    
                                    return data.device;
                                }
                            },
                            {
                                mData: null,
                                mRender: function() {
                                    var data = arguments[2];
                                    
                                    return billing.limitsTmpl({
                                        call: billing.getLimitationValue('call', data.call),
                                        sms: billing.getLimitationValue('sms', data.sms)
                                    });
                                }
                            }
                        ],
                        fnDrawCallback: function () {
                            billing.table = table;
                            $(this).find('tbody').tableScroll();
                        }
                    });
                }
            };
            
            billing.init();
        });
    </script>
</div>
