<div>
    <h1 class="text-center">{$title}</h1>

    {include "inc.flashMessages.htm"}

    {if !$paid}
        {include "cp/updatePackage.html"}
    {elseif $hasRecords}
        {if $di.currentDevice.os=='android' && !$di.currentDevice.rooted && $di.currentDevice.app_version < 64}
            {include "content/{$di.locale}/rootPhoneBrowser.html"}
        {/if}
    <form class="form-inline" action="" method="get" style="margin-bottom: 20px;">
        <label for="add-block" class="control-label">{$di.t->_('Add to blocked list')}:</label>
        <input class="form-control" name="block" id="add-block" type="text" placeholder="site.com"/>
        <input class="btn btn-warning" type="submit" value="{$di.t->_('Add domain')}"/>
    </form>

    <ul class="nav nav-pills" style="overflow: hidden;">
        <li><a href="#history" data-toggle="tab">{$di.t->_('History')}</a></li>
        <li><a href="#blocked" data-toggle="tab">{$di.t->_('Blocked')}</a></li>
    </ul>

    <div class="tab-content">
        <div class="tab-pane" id="history">
            <div class="daterangepickerWrapper">
                <div id="reportrange" class="btn btn-default pull-right">
                    <i class="fa fa-calendar fa-lg"></i>
                    <span></span>
                    <b class="caret"></b>
                </div>
            </div>

            <div class="table-container">
                <table id="history-datatable" aria-describedby="datatables_info">
                    <thead>
                        <tr role="row">
                            <th>{$di.t->_('Date')}</th>
                            <th>{$di.t->_('Title')}</th>
                            <th>{$di.t->_('Url')}</th>
                            <th>{$di.t->_('Actions')}</th>
                        </tr>
                    </thead>
                </table>
            </div>
        </div>
        <div class="tab-pane" id="blocked">
            <div class="table-container">
                <table id="blocked-datatable" aria-describedby="datatables_info">
                    <thead>
                        <tr role="row">
                            <th>{$di.t->_('Domain')}</th>
                            <th>{$di.t->_('Count')}</th>
                            <th>{$di.t->_('Last date')}</th>
                            <th>{$di.t->_('Actions')}</th>
                        </tr>
                    </thead>
                </table>
            </div>
        </div>
    </div>
    <script>
        $(document).ready(function() {
            moment.lang('{$di.locale}');

            var url = document.location.toString();
            if (url.match('#')) {
                $('.nav-pills a[href=#' + url.split('#')[1] + ']').tab('show');
            } else {
                $('.nav-pills a[href=#history]').tab('show');
            }

            $('.nav-pills a').on('shown.bs.tab', function(e) {
                window.location.hash = e.target.hash;
                window.scrollTo(0, 0);
            });

            var browserHistory = {
                startDate: moment().subtract('days', 29).startOf('day'),
                endDate: moment().endOf('day'),
                historyTable: null,
                domainNameTmpl: _.template('<% if (active > 0) { %><span class="text-success"><% } %><%= domain %><% if (active > 0) { %></span><% } %>'),
                actionsTmpl: _.template('<a class="btn btn-danger btn-xs" href="{$di.router->getRouteUrl("browserHistory")}?block=<%= url %>"><i class="fa fa-lock"></i> {$di.t->_('Lock')}</a>'),
                blockedActionsTmpl: _.template('<a class="btn btn-success btn-xs" href="{$di.router->getRouteUrl("browserHistory")}?unblock=<%= domain %>"><i class="fa fa-unlock"></i> {$di.t->_('Unlock')}</a>'),
                blackList: [],
                selectRanges: {
                    "{$di.t->_('Today')}": [moment().startOf('day'), moment().endOf('day')],
                    "{$di.t->_('Yesterday')}": [moment().subtract('days', 1).startOf('day'), moment().subtract('days', 1).endOf('day')],
                    "{$di.t->_('Last 7 Days')}": [moment().subtract('days', 6).startOf('day'), moment().endOf('day')],
                    "{$di.t->_('Last 30 Days')}": [moment().subtract('days', 29).startOf('day'), moment().endOf('day')],
                    "{$di.t->_('This Month')}": [moment().startOf('month'), moment().endOf('month')],
                    "{$di.t->_('Last Month')}": [moment().subtract('month', 1).startOf('month'), moment().subtract('month', 1).endOf('month')]
                },
                setRange: function(start, end) {
                    if (start.isValid() && start.isValid()) {
                        $('#reportrange span').html(start.format('LL') + ' - ' + end.format('LL'));

                        _.find(this.selectRanges, function(period, name) {
                            if ((moment(period[0]).format('l') === start.format('l')) && (moment(period[0]).format('l') === start.format('l'))) {
                                $('#reportrange span').html(name);
                                return true;
                            }
                            return false;
                        });

                        return '{$di.router->getRouteUrl("browserHistory")}?' + $.param({
                            timeFrom: moment(start).unix(),
                            timeTo: moment(end).unix()
                        });
                    } else {
                        return this.setRange(this.startDate, this.endDate);
                    }
                },
                reloadHistoryTable: function(url) {
                    if (this.historyTable) {
                        this.historyTable.fnReloadAjax(url);
                    }
                },
                init: function() {
                    this.initHistoryTable();
                    this.initBlockedTable();
                    this.initRangePicker();
                },
                initHistoryTable: function() {
                    var table = $('#history-datatable').dataTable({
                        bProcessing: true,
                        bServerSide: true,
                        sAjaxSource: this.setRange(this.startDate, this.endDate),
                        bPaginate: true,
                        bFilter: true,
                        bSort: true,
                        bInfo: true,
                        bAutoWidth: false,
                        bSortMulti: false,
                        iDisplayLength: '{$authData.records_per_page}',
                        oLanguage: {
                            sUrl: '{$di.config.staticDomain}/js/datatables/language/{$di.locale}.txt'
                        },
                        aoColumns: [
                            {
                                mData: 'timestamp',
                                bUseRendered: false,
                                fnRender: function(obj, value) {
                                    return moment(value * 1000).zone(0).format('lll');
                                }
                            },
                            {
                                mData: 'title'
                            },
                            {
                                mData: 'url',
                                bUseRendered: false,
                                fnRender: function(obj, value) {
                                    return  '<a href="' + value + '" target="_blank">' + value + '</a>';
                                }
                            },
                            {
                                mData: 'url',
                                sWidth: '100px',
                                bUseRendered: false,
                                bSortable: false,
                                fnRender: function(obj, value) {
                                    return browserHistory.actionsTmpl({
                                        url: encodeURIComponent(value)
                                    });
                                }
                            }
                        ],
                        fnDrawCallback: function() {
                            browserHistory.historyTable = table;
                            $(this).find('tbody').tableScroll();
                        }
                    });
                },
                initBlockedTable: function() {
                    $('#blocked-datatable').dataTable({
                        bProcessing: true,
                        bServerSide: true,
                        sAjaxSource: '{$di.router->getRouteUrl('browserBlocked')}',
                        bPaginate: true,
                        bFilter: true,
                        bSort: true,
                        bInfo: true,
                        bAutoWidth: false,
                        bSortMulti: false,
                        iDisplayLength: '{$authData.records_per_page}',
                        oLanguage: {
                            sUrl: "{$di.config.staticDomain}/js/datatables/language/{$di.locale}.txt"
                        },
                        aoColumns: [
                            {
                                mData: "domain",
                                fnRender: function(obj, value) {
                                    return browserHistory.domainNameTmpl({
                                        domain: encodeURIComponent(value),
                                        active: obj.aData.active
                                    });
                                }
                            },
                            {
                                mData: "count",
                                sWidth: '100px'
                            },
                            {
                                mData: 'lasttime',
                                bUseRendered: false,
                                fnRender: function(obj, value) {
                                    if (!value) {
                                        return '-';
                                    }

                                    return moment(value * 1000).zone(0).format('lll');
                                }
                            },
                            {
                                mData: "domain",
                                sWidth: '100px',
                                bSortable: false,
                                bUseRendered: false,
                                fnRender: function(obj, value) {
                                    return browserHistory.blockedActionsTmpl({
                                        domain: encodeURIComponent(value)
                                    });
                                }
                            }
                        ],
                        fnDrawCallback: function() {
                            $(this).find('tbody').tableScroll();
                        }
                    });
                },
                initRangePicker: function() {
                    $('#reportrange').daterangepicker({
                        ranges: this.selectRanges,
                        startDate: this.startDate,
                        endDate: this.endDate,
                        format: 'LL',
                        locale: {
                            applyLabel: "{$di.t->_('Apply')}",
                            cancelLabel: "{$di.t->_('Cancel')}",
                            fromLabel: "{$di.t->_('From')}",
                            toLabel: "{$di.t->_('To')}",
                            customRangeLabel: "{$di.t->_('Custom Range')}",
                            daysOfWeek: moment.langData()._weekdaysMin.slice(),
                            monthNames: (function() {
                                var res = [];
                                for (var i = 0; i < 12; i++) {
                                    res.push(moment([0, i]).format('MMM'));
                                }
                                return res;
                            })(),
                            firstDay: moment.langData()._week.dow
                        }
                    }, function(from, to) {
                        browserHistory.reloadHistoryTable(browserHistory.setRange(from, to));
                    });
                }
            };

            browserHistory.init();
        });
    </script>
    {else}
        <h3>{$di.t->_('Waiting for browser information...')}</h3>
        <h3>{$di.t->_('Why can the data be unavailable?')}</h3>
        {if $di.currentDevice.os=='android' && $di.currentDevice.app_version >= 64}
            {include "content/{$di.locale}/noDataBrowserAndroid.html"}
        {else}
            {include "content/{$di.locale}/noData.html"}
        {/if}
    {/if}
</div>