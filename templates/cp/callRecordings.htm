<style type="text/css">
    @media (min-width: 768px) {
        .inputWrapper {
            display: inline-block;
            margin-bottom: 0;
            vertical-align: middle;
            width: 210px;
        }

        .inputWrapper.double {
            width: 190px;
        }
    }
    
    .list-group {
        overflow: hidden;
        padding-bottom: 1px;
    }

    .phone-list-item {
        position: relative;
        display: inline-block;
        padding: 10px 30px 10px 15px;
        background-color: #fff;
        border: 1px solid #ddd;
        border-radius: 4px;
        margin: 3px 1px;
    }
    
    .phone-list-item .close {
        position: absolute;
        top: 10px;
        right: 10px;
    }

    .networkForm {
        margin: 15px 0 10px 0;
    }

    #date .input-group-addon i {
        cursor: pointer;
    }
</style>
<div>
    <h1 class="text-center">{$title}</h1>

    {include file="inc.flashMessages.htm"}

    {if !$paid}
        {include file="cp/updatePackage.html"}
    {else}
    <div class="row networkForm">
        <div class="col-lg-push-3 col-lg-6">
            <form method="post" action="" class="form-inline">
                <div class="form-group">
                    <label for="network">{$di.t->_('Upload recorded files via')}</label>
                    {html_options name="network" id="network" class="form-control" options=$networksList selected=$network}
                </div>
            </form>
        </div>
    </div>

    <p class="text-primary text-center">{$di.t->_('Additional charges may apply for data transfer using mobile operator network.')}</p>

    <div id="player" class="jp-jplayer"></div>

    <div id="jpContainer" class="jp-audio">
        <div class="jp-type-single">
            <div class="jp-gui jp-interface">
                <ul class="jp-controls">
                    <li><a href="javascript:;" class="jp-play" tabindex="1"><i class="fa fa-play"></i></a></li>
                    <li><a href="javascript:;" class="jp-pause" tabindex="1"><i class="fa fa-pause"></i></a></li>
                </ul>

                <div class="jp-progress">
                    <div class="jp-seek-bar">
                        <div class="jp-play-bar"></div>
                        <div class="jp-time-holder">
                            <div class="jp-current-time"></div>
                            <div class="jp-duration"></div>
                        </div>
                    </div>
                </div>
                <div class="jp-volume-controls">
                    <a href="javascript:;" class="jp-mute" tabindex="1" title="mute"><i class="fa fa-volume-off"></i></a>
                    <a href="javascript:;" class="jp-unmute" tabindex="1" title="unmute"><i class="fa fa-volume-up"></i></a>
                    <div class="jp-volume-bar">
                        <div class="jp-volume-bar-value"></div>
                    </div>
                </div>
                <div class="jp-close">
                    <i class="fa fa-times"></i>
                </div>
            </div>
            <div class="jp-no-solution">
                <span>{$di.t->_('Update Required')}</span>
                {$di.t->_('To play the media you will need to either update your browser to a recent version or update your <a href="http://get.adobe.com/flashplayer/" target="_blank">Flash plugin</a>.
            </div>
        </div>
    </div>

    <div class="panel panel-default">
        <div class="panel-heading">Phone Numbers to Record</div>
        <div class="panel-body text-center">
            {if $phoneNumbersList == 'all'}
            <p class="text-primary">Record All Calls</p>
            {elseif $phoneNumbersList == 'noRecord'}
            <p class="text-primary">No phone numbers to record</p>
            {else}
            {if count($phoneNumbersList)}
            <ul class="list-group">
                {foreach from=$phoneNumbersList item=phone}
                <li class="phone-list-item">{$phone} <a href="{$di.router->getRouteUrl('callRecordings')}?removePhoneNumber={$phone|escape:'url'}" class="close" aria-hidden="true">&times;</a></li>
                {/foreach}
            </ul>
            {/if}
            {/if}
            <form role="form" action="" class="form-inline" method="post">
                <div class="form-group">
                    <label>Phone Number</label>
                    <input type="text" name="phone" value="" class="form-control" placeholder="+12345676789" />
                </div>
                <div class="form-group">
                    <button type="submit" class="btn btn-success" name="addPhoneNumber">Add</button>
                </div>
                <div class="form-group">
                    <label class="no-margin">OR</label>
                </div>
                <div class="form-group">
                    <button type="submit" class="btn btn-warning" name="recordAll">Record All Calls</button>
                </div>
            </form>
        </div>
    </div>

    <div class="daterangepickerWrapper">
        <div id="reportrange" class="btn btn-default pull-right">
            <i class="fa fa-calendar fa-lg"></i>
            <span></span>
            <b class="caret"></b>
        </div>
    </div>

    <div class="table-container">
        <table class="dataTable" id="datatable" aria-describedby="datatables_info">
            <thead>
                <tr role="row">
                    <th>{$di.t->_('Date')}</th>
                    <th>{$di.t->_('Number')}</th>
                    <th>{$di.t->_('Name')}</th>
                    <th>{$di.t->_('Status')}</th>
                    <th>{$di.t->_('Actions')}</th>
                </tr>
            </thead>
        </table>
    </div>
    <script type="text/javascript">
        $(document).ready(function() {
            var playTmpl = _.template('<a href="" data-time="<%= timestamp %>" class="btn btn-play btn-xs btn-success"><i class="fa fa-play"></i> Play</a><a href="" data-time="<%= timestamp %>" class="btn btn-stop btn-xs btn-success hidden"><i class="fa fa-stop"></i> Stop</a> <a href="{$di.router->getRouteUrl("callRecordings")}/download/<%= timestamp %>" class="btn btn-download btn-xs btn-success"><i class="fa fa-cloud-download"></i> Download</a>');
            var deleteTmpl = _.template('<a href="" delete-href="{$di.router->getRouteUrl("callRecordings")}/delete/<%= timestamp %>" class="btn btn-danger btn-xs"><i class="fa fa-trash-o"></i> Delete</a>');
            var closePlayerAction = null;
            moment.lang('{$di.locale}');

            $("#player").jPlayer({
                cssSelectorAncestor: '#jpContainer',
                swfPath: 'http://jplayer.org/latest/js',
                supplied: 'mp3',
                errorAlerts: true,
                warningAlerts: true
            });

            $("#jpContainer .jp-close").on('click touchend', function() {
                if ($.isFunction(closePlayerAction)) {
                    closePlayerAction();
                }
            });

            var surroundings = {
                startDate: moment().subtract('days', 29).startOf('day'),
                endDate: moment().endOf('day'),
                table: null,
                selectRanges: {
                    "{$di.t->_('Today')}": [moment().startOf('day'), moment().endOf('day')],
                    "{$di.t->_('Yesterday')}": [moment().subtract('days', 1).startOf('day'), moment().subtract('days', 1).endOf('day')],
                    "{$di.t->_('Last 7 Days')}": [moment().subtract('days', 6).startOf('day'), moment().endOf('day')],
                    "{$di.t->_('Last 30 Days')}": [moment().subtract('days', 29).startOf('day'), moment().endOf('day')],
                    "{$di.t->_('This Month')}": [moment().startOf('month'), moment().endOf('month')],
                    "{$di.t->_('Last Month')}": [moment().subtract('month', 1).startOf('month'), moment().subtract('month', 1).endOf('month')]
                },
                setRange: function(start, end) {
                    if (start.isValid() && end.isValid()) {
                        this.startDate = start;
                        this.endDate = end;
                        $('#reportrange span').html(start.format('LL') + ' - ' + end.format('LL'));

                        _.find(this.selectRanges, function(period, name) {
                            if ((moment(period[0]).format('l') === start.format('l')) && (moment(period[0]).format('l') === start.format('l'))) {
                                $('#reportrange span').html(name);
                                return true;
                            }
                            return false;
                        });

                        return "{$di.router->getRouteUrl('callRecordings')}?" + $.param({
                            timeFrom: moment(start).unix(),
                            timeTo: moment(end).unix()
                        });
                    } else {
                        return setRange(this.startDate, this.endDate);
                    }
                },
                initTable: function() {
                    var table = $('#datatable').dataTable({
                        bProcessing: true,
                        bServerSide: true,
                        sAjaxSource: this.setRange(this.startDate, this.endDate),
                        bPaginate: true,
                        bFilter: true,
                        bSort: true,
                        bInfo: true,
                        bAutoWidth: false,
                        bSortMulti: false,
                        iDisplayLength: '{$authData.records_per_page}',
                        aaSorting: [[0, 'desc']],
                        oLanguage: {
                            sUrl: '{$di.config.staticDomain}/js/datatables/language/{$di.locale}.txt'
                        },
                        aoColumns: [
                            {
                                mData: "timestamp",
                                bUseRendered: false,
                                sWidth: '180px',
                                fnRender: function(obj, value) {
                                    return moment(value * 1000).zone(0).format('lll');
                                }
                            },
                            {
                                mData: "phone"
                            },
                            {
                                mData: "name"
                            },
                            {
                                mData: null,
                                bUseRendered: false,
                                bSortable: false,
                                fnRender: function(obj) {
                                    if (obj.aData.status > 0 || obj.aData.error > 0) {
                                        if (obj.aData.error > 0) {
                                            return '<span class="text-danger">Record Failed</span>';
                                        } else {
                                            if (obj.aData.status == 4) {
                                                return playTmpl({
                                                    timestamp: obj.aData.timestamp
                                                });
                                            } else {
                                                return '<span class="text-info">Awaiting Record</span>';
                                            }
                                        }
                                    } else {
                                        if (obj.aData.recorded > 0) {
                                            return playTmpl({
                                                timestamp: obj.aData.timestamp
                                            });
                                        } else if (obj.aData.timestamp < surroundings.maxAwaitingTime - obj.aData.duration) {
                                            return '<span class="text-danger">Record Failed</span>';
                                        }

                                        return '<span class="text-info">Awaiting Record</span>';
                                    }
                                }
                            },
                            {
                                mData: null,
                                bUseRendered: false,
                                bSortable: false,
                                sWidth: '150px',
                                fnRender: function(obj) {
                                    return deleteTmpl({
                                        timestamp: obj.aData.timestamp
                                    });
                                }
                            }],
                        fnDrawCallback: function() {
                            surroundings.table = table;
                            surroundings.initRangePicker();
                            $(this).find('tbody').tableScroll();
                        }
                    });
                },
                reloadTable: function(url) {
                    this.table.fnReloadAjax(url);
                },
                initRangePicker: function() {
                    $('#reportrange').daterangepicker({
                        ranges: this.selectRanges,
                        startDate: this.startDate,
                        endDate: this.endDate,
                        format: 'LL',
                        locale: {
                            applyLabel: "{$di.t->_('Apply')}",
                            cancelLabel: "{$di.t->_('Cancel')}",
                            fromLabel: "{$di.t->_('From')}",
                            toLabel: "{$di.t->_('To')}",
                            customRangeLabel: "{$di.t->_('Custom Range')}",
                            daysOfWeek: moment.langData()._weekdaysMin.slice(),
                            monthNames: (function() {
                                var res = [];
                                for (var i = 0; i < 12; i++) {
                                    res.push(moment([0, i]).format('MMM'));
                                }
                                return res;
                            })(),
                            firstDay: moment.langData()._week.dow
                        }
                    }, function(from, to) {
                        surroundings.reloadTable(surroundings.setRange(from, to));
                    });
                }
            };

            $('#network').change(function() {
                $(this).closest('form').submit();
            });

            var hideAll = function() {
                $('#datatable .btn-stop').addClass('hidden');
                $('#datatable .btn-play').removeClass('hidden');
            };

            $(document.body).on('click touchend', '#datatable a[delete-href]', function(e) {
                e.preventDefault();
                if (confirm("{$di.t->_('Are you sure you want to delete this recording?')}")) {
                    window.location = $(this).attr('delete-href');
                }
            });

            $(document.body).on('click touchend', '#datatable .btn-play', function(e) {
                e.preventDefault();
                if ($(this).attr('data-time') > 0) {
                    $('#player').jPlayer("setMedia", {
                        mp3: "{$di.router->getRouteUrl('callRecordings')}/play/" + $(this).attr('data-time')
                    });

                    $("#jpContainer").show();

                    hideAll();
                    $(this).next('.btn-stop').removeClass('hidden');
                    $(this).addClass('hidden');

                    $btnPlay = $(this);
                    $btnStop = $(this).next('.btn-stop');

                    closePlayerAction = function() {
                        $("#player").jPlayer("stop");
                        $("#jpContainer").hide();
                        hideAll();

                        $btnPlay.removeClass('hidden');
                        $btnStop.addClass('hidden');
                    };

                    $btnStop.click(function(e) {
                        e.preventDefault();
                        closePlayerAction();
                    });

                    $("#player").jPlayer("play");
                }
            });

            surroundings.initTable();
        });
    </script>
    {/if}
</div>