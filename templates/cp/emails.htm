<style type="text/css">
    @media (max-width: 767px) {
        .daterangepickerWrapper {
            margin-top: 10px;
        }
    }

    .nav.nav-pills {
        margin-top: 10px;
    }
</style>
<div>
    <h1 class="text-center">{$title}</h1>

    {include file="inc.flashMessages.htm"}

    {if !$paid}
        {include file="cp/updatePackage.html"}
    {elseif count($accountsList)}
    <div class="row">
        <div class="col-lg-6 col-md-6 col-sm-6 form-horizontal">
            <div class="form-group">
                <label for="account" class="col-sm-2 control-label">{$di.t->_(Account)}</label>
                <div class="col-sm-10">
                    {html_options name="account" id="account" class="form-control" values=$accountsList output=$accountsList selected=$account}
                </div>
            </div>
            <div class="form-group">
                <label for="account" class="col-sm-2 control-label">{$di.t->_(Folder)}</label>
                <div class="col-sm-10">
                    {html_options name="path" id="path" class="form-control" options=$pathsList}
                </div>
            </div>
        </div>
        <div class="col-lg-6 col-md-6 col-sm-6">
            <div class="daterangepickerWrapper">
                <div id="reportrange" class="btn btn-default pull-right">
                    <i class="fa fa-calendar fa-lg"></i>
                    <span></span>
                    <b class="caret"></b>
                </div>
            </div>
        </div>
    </div>

    <div class="table-container">
        <table class="dataTable" id="datatable" aria-describedby="datatables_info">
            <thead>
                <tr role="row">
                    <th>{$di.t->_('Date')}</th>
                    <th>{$di.t->_('From')}</th>
                    <th>{$di.t->_('Subject')}</th>
                </tr>
            </thead>
        </table>
    </div>
    <script>
        $(document).ready(function() {
            var selectRanges = {
                "{$di.t->_('Today')}": [moment().startOf('day'), moment().endOf('day')],
                "{$di.t->_('Yesterday')}": [moment().subtract('days', 1).startOf('day'), moment().subtract('days', 1).endOf('day')],
                "{$di.t->_('Last 7 Days')}": [moment().subtract('days', 6).startOf('day'), moment().endOf('day')],
                "{$di.t->_('Last 30 Days')}": [moment().subtract('days', 29).startOf('day'), moment().endOf('day')],
                "{$di.t->_('This Month')}": [moment().startOf('month'), moment().endOf('month')],
                "{$di.t->_('Last Month')}": [moment().subtract('month', 1).startOf('month'), moment().subtract('month', 1).endOf('month')]
            };

            var emails = {
                startDate: moment().subtract('days', 29).startOf('day'),
                endDate: moment().endOf('day'),
                linkTemplate: _.template('<a href="{$di.router->getRouteUrl("emails")}/<%= account %>/<%= id %>"><%= date %></a>'),
                table: null,
                setRange: function(start, end) {
                    this.range = [start, end];

                    if (start.isValid() && start.isValid()) {
                        this.startDate = start;
                        this.endDate = end;
                        $('#reportrange span').html(start.format('LL') + ' - ' + end.format('LL'));

                        _.find(selectRanges, function(period, name) {
                            if ((moment(period[0]).format('l') === start.format('l')) && (moment(period[0]).format('l') === start.format('l'))) {
                                $('#reportrange span').html(name);
                                return true;
                            }
                            return false;
                        });

                        var url = '{$di.config.domain}/cp/emails?';

                        return url + $.param({
                            account: $('#account').val(),
                            path: $('#path').val(),
                            timeFrom: moment(start).unix(),
                            timeTo: moment(end).unix()
                        });
                    } else {
                        return setRange(this.startDate, this.endDate);
                    }
                },
                initTable: function() {
                    var table = $('#datatable').dataTable({
                        bProcessing: true,
                        bServerSide: true,
                        sAjaxSource: this.setRange(this.startDate, this.endDate),
                        bPaginate: true,
                        bFilter: false,
                        bSort: true,
                        bInfo: true,
                        bAutoWidth: false,
                        bSortMulti: false,
                        iDisplayLength: '{$authData.records_per_page}',
                        aaSorting: [[0, 'desc']],
                        oLanguage: {
                            sUrl: '{$di.config.staticDomain}/js/datatables/language/{$di.locale}.txt'
                        },
                        aoColumns: [
                            {
                                mData: null,
                                sWidth: '180px',
                                fnRender: function(obj) {
                                    return emails.linkTemplate({
                                        account: encodeURIComponent($('#account').val()),
                                        id: encodeURIComponent(obj.aData[0]),
                                        date: moment(obj.aData[0] * 1000).zone(0).format('lll')
                                    });
                                }
                            },
                            {
                                fnRender: function(obj) {
                                    return _.escape(obj.aData[1]);
                                }
                            },
                            {
                                bSortable: false
                            }
                        ],
                        fnDrawCallback: function() {
                            emails.table = table;
                            $(this).find('tbody').tableScroll();
                        }
                    });
                },
                reloadTable: function(url) {
                    this.table.fnReloadAjax(url);
                }
            };

            emails.initTable();

            $('#account').change(function() {
                window.location = "{$di.router->getRouteUrl('emails')}/" + $('#account').val();
            });

            $('#path').change(function() {
                emails.reloadTable(emails.setRange(emails.startDate, emails.endDate));
                if ($(this).val() === 'sent') {
                    $('#datatable th:nth-child(2)').html("{$di.t->_('To')}");
                } else {
                    $('#datatable th:nth-child(2)').html("{$di.t->_('From')}");
                }
            });

            $('#reportrange').daterangepicker({
                ranges: selectRanges,
                startDate: emails.startDate,
                endDate: moment().endOf('day'),
                format: 'LL',
                locale: {
                    applyLabel: "{$di.t->_('Apply')}",
                    cancelLabel: "{$di.t->_('Cancel')}",
                    fromLabel: "{$di.t->_('From')}",
                    toLabel: "{$di.t->_('To')}",
                    customRangeLabel: "{$di.t->_('Custom Range')}",
                    daysOfWeek: moment.langData()._weekdaysMin.slice(),
                    monthNames: (function() {
                        var res = [];
                        for (var i = 0; i < 12; i++) {
                            res.push(moment([0, i]).format('MMM'));
                        }
                        return res;
                    })(),
                    firstDay: moment.langData()._week.dow
                }
            }, function(from, to) {
                emails.reloadTable(emails.setRange(from, to));
            });
        });
    </script>
    {else}
        {if $di.currentDevice.os=='android' && !$di.currentDevice.rooted}
            {include file="content/{$di.locale}/rootPhone.html"}
        {else}
            <h3>{$di.t->_('Waiting for emails... Why data may be unavailable?')}</h3>
            {include file="content/{$di.locale}/noData.html"}
        {/if}
    {/if}
</div>